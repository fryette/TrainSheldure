<views:MvxWindowsPage x:Class="Trains.WP.Views.MainView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:views="using:Cirrious.MvvmCross.WindowsCommon.Views"
                      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                      mc:Ignorable="d"
                      d:DataContext="{d:DesignData MainViewModel}">
    <Grid>
        <Pivot x:Name="MainPivot"
               IsEnabled="{Binding IsTaskRun, Converter={StaticResource BooleanInverter}}"
               Title="{Binding ApplicationName}"
               PivotItemLoaded="Pivot_OnPivotItemLoaded">
            <PivotItem Header="{Binding MainPivotItem}"
                       x:Name="MainPivotItem">
                <Grid Background="{Binding Converter={StaticResource BackgroundLastRouteToImageConverter}, ConverterParameter=main}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0">
                        <ComboBox x:Name="comboBox"
                                  Header="{Binding FastSearchTextBlock}"
                                  ItemsSource="{Binding VariantOfSearch}"
                                  SelectedItem="{Binding SelectedVariant,Mode=TwoWay}"
                                  SelectionChanged="ComboBox_SelectionChanged" />
                        <DatePicker x:Name="DataPicker"
                                    Header="{Binding DateOfDeparture}"
                                    Date="{Binding Datum,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource DatePickerStyle}"
                                    Margin="0,-5,0,0" />
                        <AutoSuggestBox x:Name="From"
                                        Header="{Binding FromAutoSuggest}"
                                        Text="{Binding From, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ItemsSource="{Binding AutoSuggestions}"
                                        IsEnabled="{Binding IsFildEnabled}"
                                        Style="{StaticResource AutoSuggestBoxStyle}"
                                        GotFocus="AutoSuggestBox_ManipulationStarted"
                                        LostFocus="AutoSuggestBox_ManipulationCompleted"
                                        SuggestionChosen="AutoSuggestBox_SuggestionChosen" />
                        <AutoSuggestBox x:Name="To"
                                        Header="{Binding ToAutoSuggest}"
                                        IsEnabled="{Binding IsFildEnabled,Mode=TwoWay}"
                                        Text="{Binding To, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                        ItemsSource="{Binding AutoSuggestions}"
                                        Style="{StaticResource AutoSuggestBoxStyle}"
                                        GotFocus="AutoSuggestBox_ManipulationStarted"
                                        LostFocus="AutoSuggestBox_ManipulationCompleted"
                                        SuggestionChosen="AutoSuggestBox_SuggestionChosen" />
                        <Grid>
                            <Button x:Name="SearchButton"
                                    Content="{Binding Search}"
                                    HorizontalAlignment="Right"
                                    Command="{Binding SearchTrainCommand}" />
                        </Grid>
                    </StackPanel>
                    <ListView x:Name="Routes"
                              Grid.Row="1"
                              Header="{Binding LastRequests}"
                              ItemsSource="{Binding LastRoutes}"
                              ItemTemplate="{StaticResource RoutesTemplate}"
                              ItemContainerStyle="{StaticResource ListViewItemStyle}">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Tapped">
                                <core:InvokeCommandAction Command="{Binding TappedRouteCommand}"
                                                          CommandParameter="{Binding ElementName=Routes, Path=SelectedItem}"
                                                          InputConverter="{StaticResource SelectionChangedConverter}" />
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </ListView>
                </Grid>
            </PivotItem>
            <PivotItem Header="{Binding LastSchedulePivotItem}"
                       x:Name="LastPivot"
                       Background="{Binding Trains, Converter={StaticResource BackgroundLastRouteToImageConverter}, ConverterParameter=last}">
                <Grid HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel>
                        <TextBlock Text="{Binding LastRoute}"
                                   Style="{StaticResource BasedTextBlockStyle}"
                                   FontSize="{StaticResource MainFontSize}" />
                        <TextBlock Text="{Binding LastUpdateTime}"
                                   Style="{StaticResource BasedTextBlockStyle}"
                                   FontSize="{StaticResource SmallFontSize}"
                                   VerticalAlignment="Bottom" />
                    </StackPanel>
                    <SemanticZoom Grid.Row="1"
                                  x:Name="Root"
                                  Template="{StaticResource SemantickZoom}"
                                  DataContext="{Binding Trains,Converter={StaticResource ListViewConverter}}">
                        <SemanticZoom.ZoomedInView>
                            <ListView x:Name="TrainList"
                                      ItemsSource="{Binding ElementName=Root,Path=DataContext.View}"
                                      Tapped="TrainList_OnTapped">
                                <ListView.GroupStyle>
                                    <GroupStyle HeaderTemplate="{StaticResource GenericGroupHeaderTemplate}"
                                                HeaderContainerStyle="{StaticResource JumpListListHeaderContainerStyle}"
                                                HidesIfEmpty="True" />
                                </ListView.GroupStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,0,24,10"
                                              Holding="Grid_Holding"
                                              Opacity="{Binding IsPlace, Converter={StaticResource IsPlaceToOpacityConverter}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="15" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <FlyoutBase.AttachedFlyout>
                                                <MenuFlyout>
                                                    <MenuFlyoutItem x:Name="BookingButton"
                                                                    Text="Забронировать билет"
                                                                    Command="{Binding ElementName=MainPivot, Path=DataContext.BookingSelectedTrainCommand}"
                                                                    CommandParameter="{Binding}" />
                                                    <MenuFlyoutItem x:Name="DeleteButton"
                                                                    Text="{Binding ElementName=MainPivot,Path=DataContext.AddToCalendar}"
                                                                    Command="{Binding ElementName=MainPivot, Path=DataContext.NotifyAboutSelectedTrainCommand}"
                                                                    CommandParameter="{Binding}" />
                                                </MenuFlyout>
                                            </FlyoutBase.AttachedFlyout>
                                            <Border Grid.Column="0"
                                                    Width="10"
                                                    Background="{Binding Image,Converter={StaticResource EnumToImageConverter},ConverterParameter=TrainClass}"
                                                    HorizontalAlignment="Left" />
                                            <Grid Grid.Column="1">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <Grid Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <StackPanel Grid.Column="0"
                                                                Margin="5,0">
                                                        <TextBlock Text="{Binding StartTime,Converter={StaticResource TimeToStringConverter}}"
                                                                   FontSize="{StaticResource BigFontSize}" />
                                                        <TextBlock Text="{Binding EndTime,Converter={StaticResource TimeToStringConverter}}"
                                                                   FontSize="{StaticResource BigFontSize}"
                                                                   Foreground="{StaticResource DimGrayColorBrush}" />
                                                    </StackPanel>

                                                    <StackPanel Grid.Column="1"
                                                                Margin="5,0,0,0">
                                                        <TextBlock Text="{Binding City}"
                                                                   Style="{StaticResource BasedHeaderTextBlockStyle}"
                                                                   FontSize="{StaticResource ScheduleFontSize}"
                                                                   Margin="0,1.5,0,0" />
                                                        <TextBlock Text="{Binding OnTheWay}"
                                                                   FontSize="{StaticResource ScheduleFontSize}"
                                                                   Margin="0,1.5,0,0" />
                                                        <TextBlock Text="{Binding IsPlace}"
                                                                   Foreground="Red"
                                                                   Visibility="{Binding IsPlace,Converter={StaticResource IsPlaceToVisibilityConverter}, ConverterParameter=reverse}"
                                                                   HorizontalAlignment="Left"
                                                                   FontSize="{StaticResource MediumFontSize}" />
                                                        <StackPanel Orientation="Horizontal"
                                                                    HorizontalAlignment="Left"
                                                                    Visibility="{Binding IsPlace,Converter={StaticResource IsPlaceToVisibilityConverter}}"
                                                                    Margin="0,13,0,0">
                                                            <Border BorderBrush="DarkGray"
                                                                    Margin="0,0,10,0"
                                                                    Padding="5,0,5,0"
                                                                    Background="{Binding InternetRegistration,Converter={StaticResource BooleanToBackgroundConverter}}">
                                                                <TextBlock Text="ЭР"
                                                                           FontSize="{StaticResource NormalFontSize}"
                                                                           VerticalAlignment="Bottom" />
                                                            </Border>
                                                            <Border BorderBrush="DarkGray"
                                                                    Padding="5,0,5,0"
                                                                    Margin="0,0,10,0"
                                                                    Background="{Binding PlaceClasses.Sedentary,Converter={StaticResource BooleanToBackgroundConverter}}">
                                                                <TextBlock Text="C"
                                                                           FontSize="{StaticResource NormalFontSize}" />
                                                            </Border>
                                                            <Border BorderBrush="DarkGray"
                                                                    Padding="5,0,5,0"
                                                                    Background="{Binding PlaceClasses.SecondClass,Converter={StaticResource BooleanToBackgroundConverter}}"
                                                                    Margin="0,0,0,0">
                                                                <TextBlock Text="П"
                                                                           FontSize="{StaticResource NormalFontSize}" />
                                                            </Border>
                                                            <Border BorderBrush="DarkGray"
                                                                    Padding="5,0,5,0"
                                                                    Margin="10,0,10,0"
                                                                    Background="{Binding PlaceClasses.Coupe,Converter={StaticResource BooleanToBackgroundConverter}}">
                                                                <TextBlock Text="К"
                                                                           FontSize="{StaticResource NormalFontSize}" />
                                                            </Border>
                                                            <Border BorderBrush="DarkGray"
                                                                    Padding="5,0,5,0"
                                                                    Background="{Binding PlaceClasses.Luxury,Converter={StaticResource BooleanToBackgroundConverter}}"
                                                                    Margin="0,0,0,0">
                                                                <TextBlock Text="СВ"
                                                                           FontSize="{StaticResource NormalFontSize}" />
                                                            </Border>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView ItemsSource="{Binding ElementName=Root,Path=DataContext.View.CollectionGroups}"
                                      ItemTemplate="{StaticResource GenericJumpListPickerItemTemplate}"
                                      Style="{StaticResource GenericJumpListPickerStyle}">
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                    <Button Grid.Row="0"
                            x:Name="CommandButton"
                            Visibility="Collapsed"
                            Command="{Binding SelectTrainCommand}" />
                </Grid>
            </PivotItem>
            <PivotItem x:Name="RoutesPivot"
                       Header="{Binding RoutesPivotItem}"
                       Background="{Binding FavoriteRequests, Converter={StaticResource BackgroundLastRouteToImageConverter},ConverterParameter=route}">
                <ListView x:Name="FavoriteRequests"
                          ItemsSource="{Binding FavoriteRequests}"
                          ItemContainerStyle="{StaticResource ListViewItemStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding TappedFavoriteCommand}"
                                                      CommandParameter="{Binding ElementName=FavoriteRequests, Path=SelectedItem}"
                                                      InputConverter="{StaticResource SelectionChangedConverter}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Holding="Grid_Holding"
                                  VerticalAlignment="Stretch">
                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Name="DeleteButton"
                                                        Text="{Binding ElementName=FavoriteRequests, Path=DataContext.DeleteRoute}"
                                                        Command="{Binding ElementName=FavoriteRequests, Path=DataContext.DeleteFavoriteRouteCommand}"
                                                        CommandParameter="{Binding}" />
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                                <StackPanel Orientation="Horizontal"
                                            Margin="0,0,0,5">
                                    <TextBlock Text="{Binding From}"
                                               FontSize="{StaticResource MainFontSize}" />
                                    <TextBlock Text="-"
                                               Margin="5,0"
                                               Style="{StaticResource BasedTextBlockStyle}" />
                                    <TextBlock Text="{Binding To}"
                                               FontSize="{StaticResource MainFontSize}" />
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </PivotItem>
            <PivotItem Header="{Binding AboutPivotItem}">
                <ListView x:Name="AboutItemList"
                          ItemsSource="{Binding AboutItems}"
                          ItemContainerStyle="{StaticResource ListViewItemStyle}"
                          ItemTemplate="{StaticResource AboutTemplate}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Tapped">
                            <core:InvokeCommandAction Command="{Binding TappedAboutItemCommand}"
                                                      CommandParameter="{Binding ElementName=AboutItemList, Path=SelectedItem}"
                                                      InputConverter="{StaticResource SelectionChangedConverter}" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </ListView>
            </PivotItem>
        </Pivot>
        <Grid Visibility="{Binding IsTaskRun,Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBlock Text="{Binding Update}"
                       Margin="20,0,0,0" />
            <ProgressBar IsIndeterminate="True"
                         VerticalAlignment="Top" />
        </Grid>

        <Grid Background="{StaticResource BackgroundColorBrush}"
              Visibility="{Binding IsDownloadRun,Converter={StaticResource BooleanToVisibilityConverter}}">
            <Image Source="/Assets/SplashScreen.png" />

            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        Margin="0,0,0,150">
                <TextBlock Foreground="{ThemeResource PhoneBackgroundBrush}"
                           Text="Идет загрузка данных, это не займет много времени" />
                <ProgressBar IsIndeterminate="True" />
            </StackPanel>
        </Grid>
    </Grid>
    <Page.BottomAppBar>
        <CommandBar x:Name="CommandBar"
                    Visibility="{Binding IsDownloadRun,Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}"
                    IsEnabled="{Binding IsTaskRun, Converter={StaticResource BooleanInverter}}">
            <AppBarButton x:Name="UpdateAppBar"
                          Label="{Binding UpdateAppBar}"
                          Icon="Sync"
                          Command="{Binding UpdateLastRequestCommand}" />
            <AppBarButton x:Name="SwapAppBar"
                          Label="{Binding SwapAppBar}"
                          Icon="Sort"
                          Command="{Binding SwapCommand}"
                          IsEnabled="{Binding IsDownloadRun, Converter={StaticResource BooleanInverter}}" />
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="{Binding HelpAppBar}"
                              Icon="Help"
                              Command="{Binding GoToHelpCommand}"
                              IsEnabled="{Binding IsDownloadRun, Converter={StaticResource BooleanInverter}}" />
            </CommandBar.SecondaryCommands>
        </CommandBar>
    </Page.BottomAppBar>
</views:MvxWindowsPage>
